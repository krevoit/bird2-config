#router id 23.150.40.186;  # Your router's unique identifier
include "./local.conf";
roa4 table r4;
roa6 table r6;

protocol rpki {
  roa4 { table r4; };
  roa6 { table r6; };

  remote 10.10.10.224 port 8282;

  retry keep 90;
  refresh keep 900;
  expire keep 172800;
}

function is_v4_rpki_invalid () {
  return roa_check(r4, net, bgp_path.last_nonaggregated) = ROA_INVALID;
}

function is_v6_rpki_invalid () {
  return roa_check(r6, net, bgp_path.last_nonaggregated) = ROA_INVALID;
}

function is_v4_rpki_valid() {
    return roa_check(r4, net, bgp_path.last_nonaggregated) = ROA_VALID;
}

function is_v6_rpki_valid() {
    return roa_check(r6, net, bgp_path.last_nonaggregated) = ROA_VALID;
}
include "./irr/*";
include "./filter.conf";
# Static Routes
protocol static static_v4 {
    ipv4;
    route 163.123.152.0/24 reject;
    route 163.123.154.0/24 reject;
#    route 163.123.152.0/24 via 213.248.75.115;
#    route 163.123.154.0/24 via 213.248.75.115;
}
protocol static static_v6 {
    ipv6;
    route 2602:FCFF:1::/48 reject;
    route 2a06:a005:3b4::/48 reject;
}
#include "/etc/bird/irr/*";
#include "/etc/bird/irr/AS-REVO-filters.list";
#include "/etc/bird/irr/AS-ROZINT-filters.list";
# Define filter for F4 Networks (IPv6)
filter as38041_v6_import_filter {
bgp_community.delete((40916,400));
  if (bgp_path ~ [38041]) then {
    if (is_v6_rpki_invalid()) then {
        reject;
    } else if (is_v6_rpki_valid()) then {#
	bgp_community.add((40916,101));
        accept;
    } else {
        if ( net ~ AS38041_Allowed_v6 ) then {#
	    bgp_community.add((40916,101));
            accept;
        } else {
            reject;
        }
    }
} else {
   reject;
  }
}
function upstream_import_filter_v4(int local_pref) {
        reject_bogon_asns();
        reject_bogon_prefixes_v6();
        reject_long_aspaths();
        reject_small_prefixes_v4();
        reject_default_route();
        reject_rpki_invalid_v4();
	if ( bgp_path ~ [15623] ) then {
#		print "Reject: Cyberlink in AS path (rp_filter)", net, " ", bgp_path;
		reject;
	}
#        honor_graceful_shutdown();
#	if !is_self_net() then {
#		if ( bgp_path ~ [6939] ) then bgp_local_pref = local_pref - 15; 		# Hurriacne Electric
#		if ( bgp_path ~ TRANSIT_ASNS ) then bgp_local_pref = local_pref - 10;	# Tier1
#		else bgp_local_pref = local_pref;
#		accept;
#	}
	accept;
}

function upstream_import_filter_v6(int local_pref) {
        reject_bogon_asns();
        reject_bogon_prefixes_v6();
        reject_long_aspaths();
        reject_small_prefixes_v6();
        reject_default_route();
        reject_rpki_invalid_v6();
        if ( bgp_path ~ [15623] ) then {
#               print "Reject: Cyberlink in AS path (rp_filter)", net, " ", bgp_path;
                reject;
        }
#        honor_graceful_shutdown();
#       if !is_self_net() then {
#               if ( bgp_path ~ [6939] ) then bgp_local_pref = local_pref - 15;                 # Hurriacne Electric
#               if ( bgp_path ~ TRANSIT_ASNS ) then bgp_local_pref = local_pref - 10;   # Tier1
#               else bgp_local_pref = local_pref;
#               accept;
#       }
        accept;
}

function upstream_export_filter_v4(int prepends) {
        reject_bogon_asns();
        reject_bogon_prefixes_v4();
        reject_long_aspaths();
        reject_small_prefixes_v4();
        reject_default_route();
        if (net = 163.123.152.0/24) then {
          accept;
        }
        if (net = 163.123.154.0/24) then {
          accept;
        }
#	if is_self_net() then {
#		if prepends >= 1 then bgp_path.prepend(OWNAS);
#		if prepends >= 2 then bgp_path.prepend(OWNAS);
#		if prepends >= 3 then bgp_path.prepend(OWNAS);
#		accept;
#		reject;
#	}
	reject;
}

function upstream_export_filter_v6(int prepends) {
        reject_bogon_asns();
        reject_bogon_prefixes_v6();
        reject_long_aspaths();
        reject_small_prefixes_v6();
        reject_default_route();
        export_downstreams_to_upstreams_v6(3);
        if net ~ [2602:fcff:1::/48] then {
          accept;
        }
#       if is_self_net() then {
#               if prepends >= 1 then bgp_path.prepend(OWNAS);
#               if prepends >= 2 then bgp_path.prepend(OWNAS);
#               if prepends >= 3 then bgp_path.prepend(OWNAS);
#               accept;
#               reject;
#       }
        reject;
}

template bgp upstreams_v4 {
	local as 40916;
	path metric 1;
      ipv4 {
	import keep filtered;
	import where upstream_import_filter_v4(100);
	export where upstream_export_filter_v4(0);
	import limit 800000 action block;
      };
}

template bgp peers_v4 {
        local as OWNAS;
	path metric 1;
       ipv4 {
        import keep filtered;
	import where upstream_import_filter_v4(150);
	export where upstream_export_filter_v4(0);
	import limit 10 action block;
       };
}

template bgp peers_v6 {
        local as OWNAS;
        path metric 1;
       ipv6 {
        import keep filtered;
        import where upstream_import_filter_v6(150);
        export where upstream_export_filter_v6(0);
        import limit 10 action block;
       };
}

filter f4_export_v6 {
    if net ~ [2a06:a005:3b4::/48] then {
        bgp_community.add((21738, 249));
        accept;
    }
    if net ~ [2602:fcff:1::/48] then {
        bgp_path.empty; 
        bgp_path.prepend(40916);
        bgp_path.prepend(56328);
        accept;
    }
    reject;
}
filter f4_import_v6 {
    if net ~ AS21738_Allowed_v6 then {
        accept;
    }
    else {
        reject;
    }
}
filter f4_import_v4 {
    if net ~ AS21738_Allowed_v4 then {
        accept;
    }
    else {
        reject;
    }
}
# Define filter for Arelion (IPv6)
filter arelion_export_v6 {
    if net ~ [2602:fcff:1::/48] then accept;
    if net ~ [2a06:a005:3b4::/48] then {
        bgp_path.empty;
        bgp_path.prepend(56328);
        bgp_path.prepend(40916);
        accept;
    if ((40916,101) ~ bgp_community) then {
        accept;
    }
    #} elseif (bgp_path.first = 40916) then {
    #    accept;
        }
    else {
     reject;
    }
}

# Define filter for F4 Networks (IPv4)
filter f4_export_v4 {
    if net ~ [163.123.152.0/24] then {
        bgp_path.empty;
        bgp_path.prepend(56328);
        bgp_path.prepend(40916);
        bgp_community.add((21738, 249));
        accept;
    }
    bgp_community.add((21738, 249));
    reject;
}

# Define filter for Arelion (IPv4)
filter arelion_export_v4 {
    if (net = 163.123.152.0/24) then {
        accept;
    }
    if (net = 163.123.154.0/24) then {
        accept;
    }
    reject;
}

# BGP session for F4 Networks (IPv6)
protocol bgp f4_networks_v6 {
    local as 56328;
    source address 2602:2b7:d11:4926::2;  # IPv6 address for F4 Networks session
    neighbor 2602:2b7:d11:4926::1 as 21738;  # F4 Networks IPv6 Peer
    multihop 2;
    ipv6 {
    	import filter f4_import_v6;
    	export filter f4_export_v6;
    };
}

# BGP session for Arelion (IPv6)
protocol bgp arelion_v6 {
    local as 40916;
    source address 2001:2035:0:14f::2;  # IPv6 address for Arelion session
    neighbor 2001:2035:0:14f::1 as 1299;  # Arelion IPv6 Peer
    multihop 2;
    ipv6 {
    import all;
    export filter arelion_export_v6;
    #export filter as38041_v6_import_filter;
    };
}

# BGP session for F4 Networks (IPv4)
protocol bgp f4_networks_v4 {
    local as 56328;
    source address 23.150.40.186;  # IPv4 address for F4 Networks session
    neighbor 23.150.40.185 as 21738;  # F4 Networks IPv4 Peer
    multihop 2;
    ipv4 {
    import filter f4_import_v4;
    export filter f4_export_v4;
    };
}

# BGP session for Arelion (IPv4)
protocol bgp arelion_v4 {
    local as 40916;
    source address 213.248.75.115;  # IPv4 address for Arelion session
    neighbor 213.248.75.114 as 1299;  # Arelion IPv4 Peer
    multihop 2;
    ipv4 {
    import all;
    export filter arelion_export_v4;
    };
}
template bgp kcix_v4 from peers_v4 {
  local 206.51.7.224 as OWNAS;
  multihop 2;
  ipv4 {
    import limit 200000 action block;
  };
}
template bgp kcix_v6 from peers_v6 {
  local 2001:504:1B:1::224 as OWNAS;
  multihop 2;
  ipv6 {
    import limit 100000 action block;
  };
}
protocol bgp kcixRS01_v4 from kcix_v4 {
#   local as 40916;
#   source address 206.51.7.224;
   neighbor 206.51.7.126 as 40542;
   multihop 2;
#   ipv4 {
#   import all;
#   export filter arelion_export_v4;
#   };
}

protocol bgp kcixRS01_v6 from kcix_v6 {
 neighbor 2001:504:1B:1::126 as 40542;
 multihop 2;
}

protocol bgp kcix_HE_v4 from kcix_v4 {
 neighbor 206.51.7.5 as 6939;
 ipv4 {
  import limit 20000 action block;
 };
}
protocol bgp kcix_HE_v6 from kcix_v6 {
 neighbor 2001:504:1b:1::5 as 6939;
 ipv6 {
  import limit 180000 action block;
 };
}

protocol bgp stlixRS01 {
   local as 40916;
   source address 206.83.12.79;
   neighbor 206.83.12.254 as 46389;
   ipv4 {
    import all;
    export filter arelion_export_v4;
   };
}

protocol bgp houixRS01 {
   local as 40916;
   source address 206.83.136.49;
   neighbor 206.83.136.254 as 35920;
   ipv4 {
    import all;
    export filter arelion_export_v4;
   };
}
protocol bgp downstream_AS38041_v6 {
    local as 40916;
    source address 2602:fcff:1::1;
    neighbor 2602:fcff:1::5 as 38041;  # Replace [PEER_IP] with the actual IP address of AS38041
    graceful restart on;
    multihop 2;
#    passive on;
    ipv6 {
#      import none;
#      export none;
      import keep filtered;
      import filter as38041_v6_import_filter;
      export where upstream_export_filter_v6(0);
#      export all;
#        if downstream_export_filter(0) then accept;  # Apply downstream export filter logic
#        else reject;
    };
    # Additional configurations specific to AS38041...
}
